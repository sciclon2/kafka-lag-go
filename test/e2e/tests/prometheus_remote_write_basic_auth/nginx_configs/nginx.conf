http {
    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        # Listen on port 443 for HTTPS traffic
        listen 443 ssl;
        server_name localhost;

        # Path to SSL certificate and key
        ssl_certificate /etc/nginx/nginx.crt;
        ssl_certificate_key /etc/nginx/nginx.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            # Allow access if either Basic Auth or Bearer token is valid
            satisfy any;

            # Token-based authentication via a simple regex check
            set $auth_token 0;
            if ($http_authorization ~* "^Bearer\s+dummy_token$") {
                set $auth_token 1;
            }

            # If token is valid, allow access
            auth_request /allow_token;

            # Fallback to Basic Auth
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Proxy settings for forwarding to Prometheus
            proxy_pass http://prometheus:9090/api/v1/write;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /allow_token {
            internal;
            if ($auth_token = 1) {
                return 200;
            }
            return 401;
        }
    }
}
events {}
