name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - '**'  # This allows any branch
    tags:
      - 'v*.*.*'
  release:
    types:
      - created

jobs:


  discover-e2e-tests:
    name: Discover E2E Test Folders
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      e2e-folders: ${{ steps.set-outputs.outputs.e2e-folders }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Discover test folders
      id: set-outputs
      run: |
        folders=$(find test/e2e/tests/* -maxdepth 0 -type d)
        echo "e2e-folders=$(echo $folders | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  e2e-test:
    name: E2E Test Stage
    needs: [discover-e2e-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        folder: ${{ fromJson(needs.discover-e2e-tests.outputs.e2e-folders) }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose v2
      run: |
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose
        docker compose version


    - name: Run E2E tests
      run: |
        echo "Running E2E tests for folder: ${{ matrix.folder }}"
        ./test/e2e/run.sh ${{ matrix.folder }} -d

  build-and-push-dev:
    name: Build and Push DEV Stage
    runs-on: ubuntu-latest
    needs: e2e-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
        use: true

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract short SHA
      id: vars
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Build and Push Multi-Arch Docker Image for DEV
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/kafka-lag-go:dev-${{ env.SHORT_SHA }}

    - name: Check the Created Manifest
      run: |
        docker buildx imagetools inspect ${{ secrets.DOCKER_USERNAME }}/kafka-lag-go:dev-${{ env.SHORT_SHA }}

  build-and-push-release:
    name: Build and Push Release Stage
    runs-on: ubuntu-latest
    needs: e2e-test
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
        use: true

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Multi-Arch Docker Image for Release
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/kafka-lag-go:${{ github.event.release.tag_name }}
          ${{ secrets.DOCKER_USERNAME }}/kafka-lag-go:latest

    - name: Check the Created Manifest
      run: |
        docker buildx imagetools inspect ${{ secrets.DOCKER_USERNAME }}/kafka-lag-go:latest